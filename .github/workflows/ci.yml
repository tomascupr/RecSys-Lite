name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential python3-dev libopenblas-dev
    
    - name: Set up Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.5.1
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    
    - name: Install dependencies with pip
      run: |
        python -m pip install --upgrade pip setuptools wheel
        # Install test dependencies first
        python -m pip install mypy ruff black isort pytest pytest-cov scipy numpy
        # Tell our code we're in CI environment so it uses the mock implementation
        echo "Setting CI=true to use mock implementations"
        export CI=true
        # Skip LightFM completely for CI - it's causing build issues
        # Install remaining dependencies via pip
        python -m pip install -e . --no-dependencies
        # Install remaining dependencies manually
        python -m pip install duckdb typer implicit gensim optuna faiss-cpu fastapi uvicorn pydantic
    
    - name: Lint with ruff
      env:
        CI: "true"
      run: |
        python -m ruff .
    
    - name: Type check with mypy
      env:
        CI: "true"
      run: |
        python -m mypy --ignore-missing-imports src
    
    - name: Format check with black
      env:
        CI: "true"
      run: |
        python -m black --check src
    
    - name: Run tests
      env:
        CI: "true"
      run: |
        python -m pytest --cov=src tests/

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./docker/Dockerfile
        push: false
        tags: recsys-lite:latest
        outputs: type=docker,dest=/tmp/recsys-lite.tar
    
    - name: Check image size
      run: |
        docker load --input /tmp/recsys-lite.tar
        SIZE=$(docker images recsys-lite:latest --format "{{.Size}}")
        echo "Image size: $SIZE"
        # Check if image size is less than 1GB
        if [[ $SIZE == *GB ]]; then
          GB_VALUE=$(echo $SIZE | sed 's/GB//')
          if (( $(echo "$GB_VALUE > 1" | bc -l) )); then
            echo "Image size exceeds 1GB: $SIZE"
            exit 1
          fi
        fi
    
    - name: Generate SBOM with Syft
      uses: anchore/sbom-action@v0
      with:
        image: recsys-lite:latest
        artifact-name: recsys-lite-sbom
        output-file: ./sbom.json