name: Auto Fix Tests

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  analyze-and-fix:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    env:
      TARGET_BRANCH: ${{ github.event.workflow_run.head_branch }}
    permissions:
      actions: read
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ env.TARGET_BRANCH }}
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      
      - name: Download test results
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: ci.yml
          run_id: ${{ github.event.workflow_run.id }}
          name: test-results
          path: artifacts
      
      - name: Download workflow logs
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: ci.yml
          run_id: ${{ github.event.workflow_run.id }}
          name: workflow-logs
          path: logs
          if_no_artifact_found: ignore
      
      - name: Create fix branch
        run: |
          git config --local user.email "auto-fix-bot@example.com"
          git config --local user.name "Auto Fix Bot"
          BRANCH_NAME="auto-fix-$(date +'%Y%m%d-%H%M%S')"
          git checkout -b $BRANCH_NAME
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
      
      - name: Set up Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1

      - name: Install project dependencies
        run: |
          # Install project and dev dependencies for auto-fix
          poetry config virtualenvs.create false --local
          poetry install --with dev --no-interaction
      
      - name: Analyze and fix issues
        id: fix
        run: |
          # Detect missing dependencies from test logs
          if [ -f logs/test-output.log ]; then
            MISSING=$(grep -Eo "ModuleNotFoundError: No module named '([^']+)'" logs/test-output.log \
                      | sed -E "s/ModuleNotFoundError: No module named '([^']+)'/\1/" \
                      | sort -u)
            if [ -n "$MISSING" ]; then
              echo "Adding missing dependencies: $MISSING"
              for MOD in $MISSING; do
                poetry add --group dev "$MOD" || echo "Failed to add $MOD"
              done
            fi
          fi

          # Run auto-formatters and linters
          echo "Running Ruff auto-fix"
          ruff --fix .

          echo "Running Black"
          black .

          # Determine if any changes were made
          if git diff --quiet; then
            echo "No changes made by automatic fixing"
            echo "made_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected, will commit"
            echo "made_changes=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Commit and push changes
        if: steps.fix.outputs.made_changes == 'true'
        run: |
          git add .
          git commit -m "Auto-fix: Apply automated fixes for failing tests"
          git push --set-upstream origin $BRANCH_NAME
      
      - name: Create Pull Request
        if: steps.fix.outputs.made_changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Auto-fix: Resolve failing tests"
          body: |
            This PR was automatically created to fix failing tests detected in the CI workflow.
            
            ### What was fixed:
            - Applied Ruff automatic fixes for linting issues
            - Formatted code with Black
            - Fixed missing dependencies (if any)
            
            Please review these changes before merging.
          base: ${{ env.TARGET_BRANCH }}
          branch: ${{ env.BRANCH_NAME }}
          labels: automated-fix